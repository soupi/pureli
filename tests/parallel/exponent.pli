(module main)

(define exponent (n expn)
  (if (zero? expn)
      1
      (* n (exponent n (- expn 1)))))

(define main
  (do!
    (pure
      (+
        (exponent 2 10000)
        (exponent 2 10001)
        (exponent 2 10002)
        (exponent 2 10003)
        (exponent 2 10004)
        (exponent 2 10005)
        (exponent 2 10006)
        (exponent 2 10007)
        (exponent 2 10008)
        (exponent 2 10010)
        (exponent 2 10011)
        (exponent 2 10012)
        (exponent 2 10013)
        (exponent 2 10014)
        (exponent 2 10015)
        (exponent 2 10016)
        (exponent 2 10017)
        (exponent 2 10018)
        (exponent 2 10019)
        (exponent 2 10020)
        (exponent 2 10021)
        (exponent 2 10022)
        (exponent 2 10023)
        (exponent 2 10024)
        (exponent 2 10025)
        (exponent 2 10026)
        (exponent 2 10027)
        (exponent 2 10028)
        (exponent 2 10029)))))
